{"date":"2023-08-10T16:45:28.601Z","level":"error","message":"Email not verified","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-10T16:47:08.317Z","level":"error","message":"Email not verified","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-10T16:50:20.886Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-10T16:51:13.407Z","level":"error","message":"Email not verified","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-10T17:06:17.495Z","level":"error","message":"user validation failed: email: Invalid Email","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-10T17:06:33.574Z","level":"error","message":"user validation failed: email: Invalid Email","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-10T17:06:55.708Z","level":"error","message":"user validation failed: email: Invalid Email","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-10T17:07:10.590Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-10T17:07:38.544Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-10T17:17:44.587Z","level":"error","message":"Email not verified","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-10T17:35:00.828Z","level":"error","message":"Email not verified","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-10T17:36:36.110Z","level":"error","message":"Invalid token","method":"POST","service":"user-service","url":"/verifyEmail"}
{"date":"2023-08-10T17:39:00.559Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
{"date":"2023-08-10T17:39:59.874Z","level":"error","message":"Invalid token","method":"POST","service":"user-service","url":"/verifyEmail"}
{"date":"2023-08-10T17:40:01.512Z","level":"error","message":"Invalid token","method":"POST","service":"user-service","url":"/verifyEmail"}
{"date":"2023-08-10T17:40:14.659Z","level":"error","message":"Invalid token","method":"POST","service":"user-service","url":"/verifyEmail"}
{"date":"2023-08-10T17:40:55.361Z","level":"error","message":"secretOrPrivateKey must have a value","method":"POST","service":"user-service","url":"/verifyEmail"}
{"date":"2023-08-10T18:49:00.364Z","level":"error","message":"Cast to ObjectId failed for value \"{\n  firstName: 'mm',\n  lastName: 'mm',\n  phoneNumber: '328787532',\n  userDesc: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution',\n  country: 'Pakistan123',\n  timeZone: 'UTC -8:00 / -7:00',\n  websiteLink: 'https://www.lipsum.com/'\n}\" (type Object) at path \"_id\" for model \"user\"","method":"PUT","service":"user-service","url":"/update-info"}
{"date":"2023-08-10T18:49:42.511Z","level":"error","message":"Cast to ObjectId failed for value \"{\n  firstName: 'mm',\n  lastName: 'mm',\n  phoneNumber: '328787532',\n  userDesc: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution',\n  country: 'Pakistan123',\n  timeZone: 'UTC -8:00 / -7:00',\n  websiteLink: 'https://www.lipsum.com/'\n}\" (type Object) at path \"_id\" for model \"user\"","method":"PUT","service":"user-service","url":"/update-info"}
{"date":"2023-08-10T18:53:33.449Z","level":"error","message":"Cannot read properties of undefined (reading '_id')","method":"PUT","service":"user-service","url":"/update-info"}
{"date":"2023-08-10T19:16:34.346Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-08-10T19:16:34.358Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/update-info/64d5192036d0e5f9364213c5',\n  method: 'PUT',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/update-info/64d5192036d0e5f9364213c5',\n  _parsedUrl: [Url],\n  params: [Object],\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"PUT","service":"user-service","url":"/update-info/64d5192036d0e5f9364213c5"}
{"date":"2023-08-10T19:18:22.395Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-08-10T19:18:22.404Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/update-info/64d5192036d0e5f9364213c5',\n  method: 'PUT',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/update-info/64d5192036d0e5f9364213c5',\n  _parsedUrl: [Url],\n  params: [Object],\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"PUT","service":"user-service","url":"/update-info/64d5192036d0e5f9364213c5"}
{"date":"2023-08-10T19:19:56.292Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-08-10T19:19:56.296Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/update-info/64d5192036d0e5f9364213c5',\n  method: 'PUT',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/update-info/64d5192036d0e5f9364213c5',\n  _parsedUrl: [Url],\n  params: [Object],\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"PUT","service":"user-service","url":"/update-info/64d5192036d0e5f9364213c5"}
{"date":"2023-08-10T19:21:08.328Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-08-10T19:21:08.334Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/update-info/64d5192036d0e5f9364213c5',\n  method: 'PUT',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/update-info/64d5192036d0e5f9364213c5',\n  _parsedUrl: [Url],\n  params: [Object],\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"PUT","service":"user-service","url":"/update-info/64d5192036d0e5f9364213c5"}
{"date":"2023-08-10T19:23:54.750Z","level":"error","message":"Email not verified","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-10T19:24:00.388Z","level":"error","message":"Invalid token","method":"POST","service":"user-service","url":"/verifyEmail"}
{"date":"2023-08-10T19:26:14.514Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
{"date":"2023-08-11T07:42:02.892Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-11T10:25:17.689Z","level":"error","message":"Email not verified","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-11T10:27:54.730Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
{"date":"2023-08-11T11:15:26.321Z","level":"error","message":"user validation failed: websiteLink: Path `websiteLink` is required., timeZone: Path `timeZone` is required., country: Path `country` is required., userDesc: Path `userDesc` is required., phoneNumber: Path `phoneNumber` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-11T11:16:53.374Z","level":"error","message":"user validation failed: phoneNumber: Path `phoneNumber` is required.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-11T11:26:06.433Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-11T11:43:37.684Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
{"date":"2023-08-11T11:44:29.769Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
{"date":"2023-08-11T11:51:20.347Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
{"date":"2023-08-11T14:22:59.493Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
{"date":"2023-08-11T14:24:18.559Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
{"date":"2023-08-11T14:28:25.157Z","level":"error","message":"Accomodation already exist","service":"user-service"}
{"date":"2023-08-11T14:28:25.168Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/newAccomodation',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/host',\n  originalUrl: '/host/newAccomodation',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Array],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  user: [Object],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 20,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:30:23.690Z","level":"error","message":"Accomodation already exist","service":"user-service"}
{"date":"2023-08-11T14:30:23.702Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/newAccomodation',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/host',\n  originalUrl: '/host/newAccomodation',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Array],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  user: [Object],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 20,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:42:35.328Z","level":"error","message":"Accomodation already exist","service":"user-service"}
{"date":"2023-08-11T14:43:06.932Z","level":"error","message":"Accomodation already exist","service":"user-service"}
{"date":"2023-08-11T14:43:43.474Z","level":"error","message":"Accomodation already exist","service":"user-service"}
{"date":"2023-08-11T14:48:29.734Z","level":"error","message":"Accomodation already exist","service":"user-service"}
{"date":"2023-08-11T14:50:58.280Z","level":"error","message":"Accomodation already exist","service":"user-service"}
{"date":"2023-08-11T14:53:20.276Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:53:21.916Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:53:24.552Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:54:31.211Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:54:32.797Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:54:34.141Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:54:35.813Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:54:37.106Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:54:38.381Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:55:17.252Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:55:18.773Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:56:42.149Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:56:45.621Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:56:56.363Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:56:59.165Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:58:35.007Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:59:17.370Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:59:19.449Z","level":"error","message":"host validation failed: accomodations.0.title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:59:26.730Z","level":"error","message":"Parameter \"filter\" to findOne() must be an object, got ","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:59:28.105Z","level":"error","message":"Parameter \"filter\" to findOne() must be an object, got ","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:59:29.263Z","level":"error","message":"Parameter \"filter\" to findOne() must be an object, got ","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:59:34.743Z","level":"error","message":"Parameter \"filter\" to findOne() must be an object, got [object Object]","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:59:36.227Z","level":"error","message":"Parameter \"filter\" to findOne() must be an object, got [object Object]","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T14:59:37.273Z","level":"error","message":"Parameter \"filter\" to findOne() must be an object, got [object Object]","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:04:16.895Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:04:18.871Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:05:18.190Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:06:21.148Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:08:21.707Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:08:59.504Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:09:44.876Z","level":"error","message":"Cannot destructure property 'title' of 'req.body' as it is undefined.","service":"user-service"}
{"date":"2023-08-11T15:10:05.201Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:10:06.781Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:11:15.083Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:11:22.642Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:11:42.869Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:13:28.839Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:17:40.343Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:20:07.395Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:23:39.737Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:28:20.479Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:34:55.616Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:35:46.870Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:37:44.668Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:38:56.263Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:39:41.002Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:40:50.143Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:40:56.298Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:41:29.989Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:42:23.030Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:42:48.307Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:42:58.964Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:44:14.632Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:45:00.475Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:45:01.894Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:48:40.598Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:50:56.976Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:55:45.737Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:56:06.087Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:57:09.977Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:57:44.640Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:58:26.511Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:58:28.465Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:58:30.449Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:59:10.483Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:59:11.943Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T15:59:37.393Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:02:27.936Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:02:52.728Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:03:17.337Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:05:43.894Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:06:09.426Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:06:49.516Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:07:26.526Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:07:31.490Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:08:08.586Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:08:25.508Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:09:15.075Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:09:17.507Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:10:01.800Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:10:54.441Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:11:02.611Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:11:53.648Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:12:01.750Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:12:15.408Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:13:29.122Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:13:30.500Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:14:15.504Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:14:33.397Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:16:14.609Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:16:16.782Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:16:37.508Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:16:58.390Z","level":"error","message":"Parameter \"filter\" to findOne() must be an object, got ABCD","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:17:08.481Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:17:10.012Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:17:34.888Z","level":"error","message":"Parameter \"filter\" to findOne() must be an object, got [object Object]","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:17:36.170Z","level":"error","message":"Parameter \"filter\" to findOne() must be an object, got [object Object]","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:17:47.144Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:17:48.706Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:18:04.144Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:18:06.029Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:18:27.178Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:18:32.408Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:18:35.455Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:18:40.194Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:19:13.834Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:19:15.260Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:22:41.339Z","level":"error","message":"_id is not defined","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:23:15.901Z","level":"error","message":"id is not defined","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:23:16.058Z","level":"error","message":"id is not defined","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:23:18.282Z","level":"error","message":"id is not defined","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:23:27.167Z","level":"error","message":"id is not defined","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:32:11.312Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:32:14.165Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:32:20.351Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:34:23.086Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:34:27.962Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:35:07.269Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:35:08.486Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:35:11.299Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:35:19.682Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:35:21.151Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:37:29.130Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-11T16:37:34.335Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-12T08:42:25.292Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
{"date":"2023-08-12T08:45:52.393Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-12T08:46:58.661Z","level":"error","message":"host validation failed: title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-12T08:50:15.961Z","level":"error","message":"E11000 duplicate key error collection: testDB.hosts index: accomodations.title_1 dup key: { accomodations.title: null }","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-12T10:11:39.732Z","level":"error","message":"accomodation validation failed: location.latitude: Path `location.latitude` is required., title: Path `title` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-12T10:14:33.085Z","level":"error","message":"accomodation validation failed: location.latitude: Path `location.latitude` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-12T10:45:39.421Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-12T10:46:09.965Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-12T11:23:11.196Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-12T11:25:38.099Z","level":"error","message":"Cast to ObjectId failed for value \"64sd76b810470ecce4ce29e6f\" (type string) at path \"_id\" for model \"accomodation\"","method":"PUT","service":"user-service","url":"/updateAccomodation/64sd76b810470ecce4ce29e6f"}
{"date":"2023-08-12T11:35:55.240Z","level":"error","message":"isActive is not defined","method":"GET","service":"user-service","url":"/getAccomodations"}
{"date":"2023-08-12T11:39:17.460Z","level":"error","message":"Accomodation does not exist","method":"PUT","service":"user-service","url":"/updateAccomodation/64d76b810470ecce4ce29e6f"}
{"date":"2023-08-12T12:27:15.150Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-12T12:28:08.026Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-12T12:37:25.159Z","level":"error","message":"error processing query: ns=testDB.accomodationsTree: $and\n    isActive $eq true\n    GEONEAR  field=location maxdist=10000 isNearSphere=0\nSort: {}\nProj: {}\n planner returned error :: caused by :: unable to find index for $geoNear query","method":"POST","service":"user-service","url":"/getAccomodations"}
{"date":"2023-08-15T08:33:15.251Z","level":"error","message":"reviews validation failed: userId: Path `userId` is required., rating: validator is not defined","method":"POST","service":"user-service","url":"/:id/newReview"}
{"date":"2023-08-15T08:34:08.741Z","level":"error","message":"reviews validation failed: rating: validator is not defined","method":"POST","service":"user-service","url":"/:id/newReview"}
{"date":"2023-08-15T08:34:29.827Z","level":"error","message":"reviews validation failed: rating: validator is not defined","method":"POST","service":"user-service","url":"/:id/newReview"}
{"date":"2023-08-15T08:36:16.725Z","level":"error","message":"reviews validation failed: rating: Expected a string but received a number","method":"POST","service":"user-service","url":"/:id/newReview"}
{"date":"2023-08-15T08:36:48.477Z","level":"error","message":"reviews validation failed: rating: validator is not a function","method":"POST","service":"user-service","url":"/:id/newReview"}
{"date":"2023-08-15T08:36:53.977Z","level":"error","message":"reviews validation failed: rating: validator is not a function","method":"POST","service":"user-service","url":"/:id/newReview"}
{"date":"2023-08-15T08:44:59.799Z","level":"error","message":"reviews validation failed: userId: Path `userId` is required.","method":"POST","service":"user-service","url":"/:id/newReview"}
{"date":"2023-08-15T08:45:13.310Z","level":"error","message":"reviews validation failed: userId: Path `userId` is required.","method":"POST","service":"user-service","url":"/:id/newReview"}
{"date":"2023-08-15T08:49:20.938Z","level":"error","message":"Unauthorized User","method":"POST","service":"user-service","url":"/:id/newReview"}
{"date":"2023-08-15T08:59:46.792Z","level":"error","message":"Unauthorized User","method":"POST","service":"user-service","url":"/:id/newReview"}
{"date":"2023-08-15T08:59:47.929Z","level":"error","message":"Unauthorized User","method":"POST","service":"user-service","url":"/:id/newReview"}
{"date":"2023-08-15T09:00:34.106Z","level":"error","message":"reviews validation failed: rating: Ratings must be between 0 and 5.","method":"POST","service":"user-service","url":"/:id/newReview"}
{"date":"2023-08-15T09:00:36.184Z","level":"error","message":"reviews validation failed: rating: Ratings must be between 0 and 5.","method":"POST","service":"user-service","url":"/:id/newReview"}
{"date":"2023-08-15T09:03:12.241Z","level":"error","message":"reviews validation failed: rating: Ratings must be between 0 and 5.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T10:12:34.596Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:12:36.603Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:12:37.255Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:12:37.440Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:12:58.253Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:12:59.206Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:13:06.459Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:13:07.195Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:13:25.826Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:13:27.007Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:13:27.663Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:13:37.317Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:13:38.116Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:13:38.439Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:13:38.626Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:13:38.807Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:13:38.985Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:13:50.992Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:13:51.669Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:00.836Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:02.061Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:02.455Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:02.646Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:29.844Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:30.538Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:31.094Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:31.270Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:31.452Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:31.616Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:31.809Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: undefined }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:46.936Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:47.623Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:48.077Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:48.273Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:48.439Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:48.616Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:48.776Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:14:49.095Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77aab3f32bb57eaaf6cdf' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77aab3f32bb57eaaf6cdf/getReviews"}
{"date":"2023-08-15T10:15:04.601Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:15:05.217Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:15:05.451Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:15:05.620Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:15:05.782Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:15:05.963Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:15:06.118Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:15:06.306Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:15:06.470Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:15:30.817Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:15:31.456Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:15:31.660Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:15:58.757Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:15:59.649Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:16:00.360Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:16:00.576Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:16:00.737Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:16:00.942Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:16:01.329Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:16:02.581Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:16:03.092Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:16:03.294Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:16:03.527Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:16:33.483Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:16:34.519Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:16:35.578Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:16:42.027Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:16:42.598Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:16:42.851Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:16:43.027Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:17:58.053Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:18:04.107Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:19:30.798Z","level":"error","message":"Parameter \"filter\" to find() must be an object, got 64d77a5b3f32bb57eaaf6cd9","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:19:31.793Z","level":"error","message":"Parameter \"filter\" to find() must be an object, got 64d77a5b3f32bb57eaaf6cd9","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:19:32.270Z","level":"error","message":"Parameter \"filter\" to find() must be an object, got 64d77a5b3f32bb57eaaf6cd9","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:19:32.468Z","level":"error","message":"Parameter \"filter\" to find() must be an object, got 64d77a5b3f32bb57eaaf6cd9","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:19:32.667Z","level":"error","message":"Parameter \"filter\" to find() must be an object, got 64d77a5b3f32bb57eaaf6cd9","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:19:32.846Z","level":"error","message":"Parameter \"filter\" to find() must be an object, got 64d77a5b3f32bb57eaaf6cd9","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:19:34.806Z","level":"error","message":"Parameter \"filter\" to find() must be an object, got 64d77a5b3f32bb57eaaf6cd9","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:21:25.111Z","level":"error","message":"Cast to ObjectId failed for value \"{ id: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:21:26.151Z","level":"error","message":"Cast to ObjectId failed for value \"{ id: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:21:26.377Z","level":"error","message":"Cast to ObjectId failed for value \"{ id: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:21:26.556Z","level":"error","message":"Cast to ObjectId failed for value \"{ id: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:21:56.605Z","level":"error","message":"Cast to ObjectId failed for value \"{ id: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:21:57.251Z","level":"error","message":"Cast to ObjectId failed for value \"{ id: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:21:57.587Z","level":"error","message":"Cast to ObjectId failed for value \"{ id: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:21:57.751Z","level":"error","message":"Cast to ObjectId failed for value \"{ id: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:21:57.920Z","level":"error","message":"Cast to ObjectId failed for value \"{ id: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:21:58.200Z","level":"error","message":"Cast to ObjectId failed for value \"{ id: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:21:58.406Z","level":"error","message":"Cast to ObjectId failed for value \"{ id: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:21:58.583Z","level":"error","message":"Cast to ObjectId failed for value \"{ id: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:21:58.769Z","level":"error","message":"Cast to ObjectId failed for value \"{ id: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:21:58.937Z","level":"error","message":"Cast to ObjectId failed for value \"{ id: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:21:59.185Z","level":"error","message":"Cast to ObjectId failed for value \"{ id: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:22:11.838Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:22:12.603Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:22:12.816Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:22:12.997Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:22:23.024Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:22:23.919Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:22:26.975Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:22:27.559Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:22:38.601Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:22:39.464Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:24:50.443Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationId: '64d77a5b3f32bb57eaaf6cd9' }\" (type Object) at path \"_id\" for model \"reviews\"","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:28:02.647Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:28:03.306Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:28:03.604Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:28:03.771Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:28:03.962Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:28:36.824Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:28:37.387Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:28:37.605Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:28:37.934Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:28:38.269Z","level":"error","message":"Cannot read properties of null (reading 'length')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:50:50.470Z","level":"error","message":"Cannot populate path `reviews` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:50:51.756Z","level":"error","message":"Cannot populate path `reviews` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:50:52.364Z","level":"error","message":"Cannot populate path `reviews` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:50:52.556Z","level":"error","message":"Cannot populate path `reviews` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:51:14.493Z","level":"error","message":"Cannot populate path `review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:51:15.322Z","level":"error","message":"Cannot populate path `review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:51:15.588Z","level":"error","message":"Cannot populate path `review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:51:15.798Z","level":"error","message":"Cannot populate path `review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:51:16.007Z","level":"error","message":"Cannot populate path `review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:51:28.552Z","level":"error","message":"Cannot populate path `reviews` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:51:29.422Z","level":"error","message":"Cannot populate path `reviews` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:53:37.806Z","level":"error","message":"Cannot populate path `reviews` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:53:38.639Z","level":"error","message":"Cannot populate path `reviews` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:53:38.850Z","level":"error","message":"Cannot populate path `reviews` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:53:39.034Z","level":"error","message":"Cannot populate path `reviews` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:53:39.203Z","level":"error","message":"Cannot populate path `reviews` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:53:39.393Z","level":"error","message":"Cannot populate path `reviews` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:54:13.533Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:54:14.283Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:54:14.552Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:54:14.740Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:54:15.238Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:54:15.590Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:01.851Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:02.712Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:03.346Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:03.554Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:03.715Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:03.901Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:04.043Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:04.195Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:04.378Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:04.517Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:36.863Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:37.464Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:37.637Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:37.810Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:37.987Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:38.168Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:38.329Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:48.193Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:49.112Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:49.294Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:49.455Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:49.624Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T10:57:49.797Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:03:51.259Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:03:52.394Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:03:52.965Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:03:53.139Z","level":"error","message":"Cannot populate path `Review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:04:44.972Z","level":"error","message":"Cannot populate path `review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:04:45.529Z","level":"error","message":"Cannot populate path `review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:04:45.718Z","level":"error","message":"Cannot populate path `review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:04:45.896Z","level":"error","message":"Cannot populate path `review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:04:46.038Z","level":"error","message":"Cannot populate path `review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:04:46.188Z","level":"error","message":"Cannot populate path `review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:04:46.338Z","level":"error","message":"Cannot populate path `review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:04:46.484Z","level":"error","message":"Cannot populate path `review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:04:46.650Z","level":"error","message":"Cannot populate path `review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:04:47.496Z","level":"error","message":"Cannot populate path `review` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:08:35.070Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:08:35.674Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:08:36.206Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:08:36.372Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:08:36.574Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:08:36.759Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:08:36.943Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:08:39.049Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:08:39.191Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:08:39.371Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:08:39.534Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:08:39.835Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:08:40.006Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:08:40.325Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:08:40.466Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:08:40.620Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:09:09.077Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:09:09.658Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:09:09.855Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:09:10.016Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:09:10.184Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:09:19.449Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:09:20.159Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:09:20.347Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:09:20.513Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:09:20.701Z","level":"error","message":"accomodationReviews is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:17:20.146Z","level":"error","message":"User is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:17:20.748Z","level":"error","message":"User is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:17:20.954Z","level":"error","message":"User is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:17:21.145Z","level":"error","message":"User is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:17:21.307Z","level":"error","message":"User is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:17:32.725Z","level":"error","message":"User is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:17:33.376Z","level":"error","message":"User is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:17:33.556Z","level":"error","message":"User is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:17:33.780Z","level":"error","message":"User is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:17:33.930Z","level":"error","message":"User is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:17:45.374Z","level":"error","message":"user is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:17:46.156Z","level":"error","message":"user is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:17:46.368Z","level":"error","message":"user is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:17:46.533Z","level":"error","message":"user is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:17:46.808Z","level":"error","message":"user is not defined","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:36:00.238Z","level":"error","message":"Cannot populate path `reviewsId` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:40:15.837Z","level":"error","message":"Schema hasn't been registered for model \"Reviews\".\nUse mongoose.model(name, schema)","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:40:19.091Z","level":"error","message":"Schema hasn't been registered for model \"Reviews\".\nUse mongoose.model(name, schema)","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:57:08.782Z","level":"error","message":"Cannot populate path `reviews` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:57:09.547Z","level":"error","message":"Cannot populate path `reviews` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:57:09.785Z","level":"error","message":"Cannot populate path `reviews` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T11:57:09.940Z","level":"error","message":"Cannot populate path `reviews` because it is not in your schema. Set the `strictPopulate` option to false to override.","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T12:01:45.883Z","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:01:49.337Z","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:01:50.104Z","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:02:54.388Z","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:02:55.033Z","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:07:30.044Z","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:07:30.667Z","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:07:30.843Z","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:07:31.008Z","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:07:31.170Z","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:07:31.334Z","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:07:31.584Z","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:07:31.681Z","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:07:58.461Z","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:07:59.313Z","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:08:00.133Z","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:08:00.366Z","level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:09:30.521Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:09:31.318Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:09:31.487Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:09:31.988Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:09:32.138Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:09:32.275Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:09:32.659Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:09:32.909Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:09:33.066Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:09:33.179Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:09:33.341Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:09:33.507Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/newReview"}
{"date":"2023-08-15T12:10:03.507Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:04.239Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:04.798Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:04.959Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:05.124Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:05.277Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:05.587Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:05.757Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:05.925Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:06.083Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:18.293Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:18.848Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:19.039Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:19.235Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:19.400Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:19.566Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:19.734Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:19.893Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:35.746Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:36.277Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:36.460Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:10:36.639Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:18:48.857Z","level":"error","message":"Cannot read properties of null (reading 'reviews')","method":"GET","service":"user-service","url":"/64d77a5b3f32bb57eaaf6cd9/getReviews"}
{"date":"2023-08-15T12:18:53.432Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:21:42.967Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:21:43.606Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:22:32.108Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:22:32.833Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:22:33.027Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:22:33.226Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:22:42.887Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:22:43.400Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:22:43.581Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:23:09.908Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:24:17.189Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee340778746/newReview"}
{"date":"2023-08-15T12:25:23.698Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee3407c8746/newReview"}
{"date":"2023-08-15T12:25:24.775Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee3407c8746/newReview"}
{"date":"2023-08-15T12:27:14.631Z","level":"error","message":"Parameter \"filter\" to find() must be an object, got 64db68d3d833eee3407c8746","method":"POST","service":"user-service","url":"/64db68d3d833eee3407c8746/newReview"}
{"date":"2023-08-15T12:27:28.725Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee3407c8746/newReview"}
{"date":"2023-08-15T12:27:29.771Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/64db68d3d833eee3407c8746/newReview"}
{"date":"2023-08-15T12:28:12.691Z","level":"error","message":"Cast to ObjectId failed for value \"64db68dbd833eee3407874a\" (type string) at path \"_id\" for model \"Accomodation\"","method":"POST","service":"user-service","url":"/64db68dbd833eee3407874a/newReview"}
{"date":"2023-08-15T12:43:38.647Z","level":"error","message":"myaccord is not defined","method":"GET","service":"user-service","url":"/64db68dbd833eee34077874a/getReviews"}
{"date":"2023-08-15T12:43:40.405Z","level":"error","message":"myaccord is not defined","method":"GET","service":"user-service","url":"/64db68dbd833eee34077874a/getReviews"}
{"date":"2023-08-15T12:44:21.705Z","level":"error","message":"myaccord is not defined","method":"GET","service":"user-service","url":"/64db68dbd833eee34077874a/getReviews"}
{"date":"2023-08-15T12:44:32.371Z","level":"error","message":"myaccord is not defined","method":"GET","service":"user-service","url":"/64db68dbd833eee34077874a/getReviews"}
{"date":"2023-08-15T12:44:33.239Z","level":"error","message":"myaccord is not defined","method":"GET","service":"user-service","url":"/64db68dbd833eee34077874a/getReviews"}
{"date":"2023-08-15T12:44:33.680Z","level":"error","message":"myaccord is not defined","method":"GET","service":"user-service","url":"/64db68dbd833eee34077874a/getReviews"}
{"date":"2023-08-15T12:44:49.256Z","level":"error","message":"myaccord is not defined","method":"GET","service":"user-service","url":"/64db68dbd833eee34077874a/getReviews"}
{"date":"2023-08-15T12:55:45.312Z","level":"error","message":"Assignment to constant variable.","method":"GET","service":"user-service","url":"/64db68dbd833eee34077874a/getReviews"}
{"date":"2023-08-15T12:55:46.305Z","level":"error","message":"Assignment to constant variable.","method":"GET","service":"user-service","url":"/64db68dbd833eee34077874a/getReviews"}
{"date":"2023-08-15T12:55:47.205Z","level":"error","message":"Assignment to constant variable.","method":"GET","service":"user-service","url":"/64db68dbd833eee34077874a/getReviews"}
{"date":"2023-08-15T15:33:49.912Z","level":"error","message":"Cannot destructure property 'avatar' of 'req.files' as it is undefined.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-15T15:34:07.869Z","level":"error","message":"Cannot destructure property 'avatar' of 'req.files' as it is undefined.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-15T15:34:27.489Z","level":"error","message":"Please upload Avatar and Cover Image","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-15T15:34:28.254Z","level":"error","message":"Please upload Avatar and Cover Image","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-15T15:34:28.919Z","level":"error","message":"Please upload Avatar and Cover Image","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-15T15:41:58.303Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
{"date":"2023-08-15T15:43:09.358Z","level":"error","message":"Can't extract geo keys: { _id: ObjectId('64db9d0d4eb9aa7e845cc95d'), reviewsId: [], title: \"Lorem123\", desc: \"Sample Description\", capacity: 3, location: { type: \"Point\" }, createdBy: \"64db9b27d00febe165ba3632\", services: [ \"nothing\", \"nothing\" ], images: [], isActive: true, createdAt: new Date(1692114189024), updatedAt: new Date(1692114189024), __v: 0 }  Point must be an array or object","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-15T15:43:12.122Z","level":"error","message":"Can't extract geo keys: { _id: ObjectId('64db9d0f4eb9aa7e845cc961'), reviewsId: [], title: \"Lorem123\", desc: \"Sample Description\", capacity: 3, location: { type: \"Point\" }, createdBy: \"64db9b27d00febe165ba3632\", services: [ \"nothing\", \"nothing\" ], images: [], isActive: true, createdAt: new Date(1692114191880), updatedAt: new Date(1692114191880), __v: 0 }  Point must be an array or object","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-15T15:43:23.304Z","level":"error","message":"Can't extract geo keys: { _id: ObjectId('64db9d1b4eb9aa7e845cc965'), reviewsId: [], title: \"Lorem123\", desc: \"Sample Description\", capacity: 3, location: { type: \"Point\" }, createdBy: \"64db9b27d00febe165ba3632\", services: [ \"nothing\", \"nothing\" ], images: [], isActive: true, createdAt: new Date(1692114203086), updatedAt: new Date(1692114203086), __v: 0 }  Point must be an array or object","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-15T15:45:53.403Z","level":"error","message":"Can't extract geo keys: { _id: ObjectId('64db9db14eb9aa7e845cc969'), reviewsId: [], title: \"Lorem123\", desc: \"Sample Description\", capacity: 3, location: { type: \"Point\" }, createdBy: \"64db9b27d00febe165ba3632\", services: [ \"nothing\", \"nothing\" ], images: [], isActive: true, createdAt: new Date(1692114353106), updatedAt: new Date(1692114353106), __v: 0 }  Point must be an array or object","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-15T15:47:19.840Z","level":"error","message":"Can't extract geo keys: { _id: ObjectId('64db9e073f7746ce7dce1d96'), reviewsId: [], title: \"Lorem123\", desc: \"Sample Description\", capacity: 3, location: { type: \"Point\" }, createdBy: \"64db9b27d00febe165ba3632\", services: [ \"nothing\", \"nothing\" ], images: [], isActive: true, createdAt: new Date(1692114439269), updatedAt: new Date(1692114439269), __v: 0 }  Point must be an array or object","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-15T15:47:22.285Z","level":"error","message":"Can't extract geo keys: { _id: ObjectId('64db9e093f7746ce7dce1d9b'), reviewsId: [], title: \"Lorem123\", desc: \"Sample Description\", capacity: 3, location: { type: \"Point\" }, createdBy: \"64db9b27d00febe165ba3632\", services: [ \"nothing\", \"nothing\" ], images: [], isActive: true, createdAt: new Date(1692114441980), updatedAt: new Date(1692114441980), __v: 0 }  Point must be an array or object","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-15T15:47:23.925Z","level":"error","message":"Can't extract geo keys: { _id: ObjectId('64db9e0b3f7746ce7dce1d9f'), reviewsId: [], title: \"Lorem123\", desc: \"Sample Description\", capacity: 3, location: { type: \"Point\" }, createdBy: \"64db9b27d00febe165ba3632\", services: [ \"nothing\", \"nothing\" ], images: [], isActive: true, createdAt: new Date(1692114443721), updatedAt: new Date(1692114443721), __v: 0 }  Point must be an array or object","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-15T15:49:06.130Z","level":"error","message":"Can't extract geo keys: { _id: ObjectId('64db9e71b015e5b5f43f2e99'), reviewsId: [], title: \"Lorem123\", desc: \"Sample Description\", capacity: 3, location: { type: \"Point\" }, createdBy: \"64db9b27d00febe165ba3632\", services: [ \"nothing\", \"nothing\" ], images: [], isActive: true, createdAt: new Date(1692114545863), updatedAt: new Date(1692114545863), __v: 0 }  Point must be an array or object","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-15T15:49:09.219Z","level":"error","message":"Can't extract geo keys: { _id: ObjectId('64db9e74b015e5b5f43f2e9d'), reviewsId: [], title: \"Lorem123\", desc: \"Sample Description\", capacity: 3, location: { type: \"Point\" }, createdBy: \"64db9b27d00febe165ba3632\", services: [ \"nothing\", \"nothing\" ], images: [], isActive: true, createdAt: new Date(1692114549005), updatedAt: new Date(1692114549005), __v: 0 }  Point must be an array or object","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-15T15:49:35.820Z","level":"error","message":"Cannot read properties of null (reading 'role')","method":"POST","service":"user-service","url":"/newReview/64db68dbd833eee34077874a"}
{"date":"2023-08-15T15:49:36.641Z","level":"error","message":"Cannot read properties of null (reading 'role')","method":"POST","service":"user-service","url":"/newReview/64db68dbd833eee34077874a"}
{"date":"2023-08-15T15:50:15.087Z","level":"error","message":"Unauthorized User","method":"POST","service":"user-service","url":"/newReview/64db68dbd833eee34077874a"}
{"date":"2023-08-15T15:50:18.315Z","level":"error","message":"Can't extract geo keys: { _id: ObjectId('64db9ebab015e5b5f43f2ea5'), reviewsId: [], title: \"Lorem123\", desc: \"Sample Description\", capacity: 3, location: { type: \"Point\" }, createdBy: \"64db9b27d00febe165ba3632\", services: [ \"nothing\", \"nothing\" ], images: [], isActive: true, createdAt: new Date(1692114618012), updatedAt: new Date(1692114618012), __v: 0 }  Point must be an array or object","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-15T15:59:38.761Z","level":"error","message":"Can't extract geo keys: { _id: ObjectId('64dba0eaf02b35b7a0db3487'), reviewsId: [], title: \"Lorem123\", desc: \"Sample Description\", capacity: 3, location: { type: \"Point\", coordinates: [] }, createdBy: \"64db9b27d00febe165ba3632\", services: [ \"nothing\", \"nothing\" ], images: [], isActive: true, createdAt: new Date(1692115178293), updatedAt: new Date(1692115178293), __v: 0 }  Point must only contain numeric elements","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-15T16:02:58.896Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-08-15T16:02:58.915Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T16:03:01.121Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-08-15T16:03:01.130Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T16:04:08.072Z","level":"error","message":"Accommodation Does not exist","method":"POST","service":"user-service","url":"/newReview/64db68dbd833eee34077874a"}
{"date":"2023-08-15T20:03:09.061Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-08-15T20:03:09.084Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:05:12.444Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-08-15T20:05:12.473Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:06:06.848Z","level":"error","message":"User does not exist","service":"user-service"}
{"date":"2023-08-15T20:06:06.882Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:11:09.099Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-15T20:11:09.133Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:14:48.726Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-15T20:14:48.769Z","level":"error","message":"error.message","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:19:23.512Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-15T20:19:23.539Z","level":"error","message":"An error occurred","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:19:25.354Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-15T20:19:25.360Z","level":"error","message":"An error occurred","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:24:50.153Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-15T20:24:50.158Z","level":"error","message":"An error occurred","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:25:12.304Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-15T20:25:12.339Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:31:29.720Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-15T20:31:29.751Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:31:31.684Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-15T20:31:31.692Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:31:32.751Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-15T20:31:32.756Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:31:48.371Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-15T20:31:48.377Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:32:12.422Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-15T20:32:12.460Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:32:14.077Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-15T20:32:14.086Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:32:20.731Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-15T20:32:20.736Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:32:22.370Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-15T20:32:22.379Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:32:24.316Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-15T20:32:24.325Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:32:26.865Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-15T20:32:26.870Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-15T20:33:44.410Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-15T20:33:44.453Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T02:29:38.035Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-16T02:29:38.071Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T02:30:50.548Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-16T02:30:50.581Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T02:30:57.755Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-16T02:30:57.759Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T02:30:59.151Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-16T02:30:59.161Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T02:31:03.143Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-16T02:31:03.148Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T02:31:05.859Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-16T02:31:05.866Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T02:31:09.492Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-16T02:31:09.500Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T02:31:10.062Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-16T02:31:10.067Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T02:55:02.295Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-16T02:55:02.318Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T02:55:07.579Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-16T02:55:07.586Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T08:46:20.773Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T08:47:11.114Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T08:47:27.172Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T08:47:28.671Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T08:48:50.807Z","level":"error","message":"Cannot read properties of undefined (reading 'match')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T08:48:52.172Z","level":"error","message":"Cannot read properties of undefined (reading 'match')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T08:48:52.972Z","level":"error","message":"Cannot read properties of undefined (reading 'match')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T08:49:25.918Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T08:49:26.823Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T08:49:27.401Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T08:49:27.609Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T08:49:27.829Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T08:49:47.865Z","level":"error","message":"Cannot destructure property 'firstName' of 'req.body' as it is undefined.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T08:49:50.210Z","level":"error","message":"Cannot destructure property 'firstName' of 'req.body' as it is undefined.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T08:49:57.062Z","level":"error","message":"Cannot destructure property 'firstName' of 'req.body' as it is undefined.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T08:49:57.967Z","level":"error","message":"Cannot destructure property 'firstName' of 'req.body' as it is undefined.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T08:50:21.333Z","level":"error","message":"Cannot destructure property 'firstName' of 'req.body' as it is undefined.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:01:21.521Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:01:22.197Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:01:22.912Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:01:23.116Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:01:23.476Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:01:28.881Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:01:29.940Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:01:34.071Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:05:48.951Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:05:49.904Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:05:50.641Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:05:50.917Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:05:51.180Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:06:23.171Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:06:24.336Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:07:04.764Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:07:05.727Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:07:08.706Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:07:34.230Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:07:36.170Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:07:56.270Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:07:57.749Z","level":"error","message":"Cannot read properties of undefined (reading 'value')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:08:04.781Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:09:24.614Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:09:25.533Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:11:32.537Z","level":"error","message":"Please, provide correct credentials","service":"user-service"}
{"date":"2023-08-16T09:11:32.543Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: [Object],\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:15:31.198Z","level":"error","message":"Please provide email and password","service":"user-service"}
{"date":"2023-08-16T09:15:31.203Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: false,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: {},\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:15:31.948Z","level":"error","message":"Please provide email and password","service":"user-service"}
{"date":"2023-08-16T09:15:31.952Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: false,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: {},\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:21:15.209Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:21:16.074Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:21:54.090Z","level":"error","message":"Cannot read properties of undefined (reading '_id')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:23:24.303Z","level":"error","message":"Cannot read properties of undefined (reading 'id')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:24:55.008Z","level":"error","message":"ENOENT: no such file or directory, open 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\mm-1692177894988avatar1.png'","service":"user-service"}
{"date":"2023-08-16T09:25:14.194Z","level":"error","message":"ENOENT: no such file or directory, open 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\mm-1692177914173avatar1.png'","service":"user-service"}
{"date":"2023-08-16T09:26:01.345Z","level":"error","message":"ENOENT: no such file or directory, open 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\1692177961325avatar1.png'","service":"user-service"}
{"date":"2023-08-16T09:32:48.589Z","level":"error","message":"Please provide email and password","service":"user-service"}
{"date":"2023-08-16T09:32:48.592Z","level":"error","message":"Invalid status code: IncomingMessage {\n  _readableState: [ReadableState],\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: [Socket],\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [Array],\n  rawTrailers: [],\n  joinDuplicateHeaders: undefined,\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: [Socket],\n  _consuming: false,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/auth',\n  originalUrl: '/auth/login',\n  _parsedUrl: [Url],\n  params: {},\n  query: {},\n  res: [ServerResponse],\n  body: {},\n  _body: true,\n  length: undefined,\n  route: [Route],\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: [Object],\n  [Symbol(kHeadersCount)]: 18,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:33:37.272Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:33:42.403Z","level":"error","message":"Please provide email and password","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:42:23.436Z","level":"error","message":"Please, provide correct credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:42:24.680Z","level":"error","message":"Please, provide correct credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:42:25.798Z","level":"error","message":"Please, provide correct credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:46:44.791Z","level":"error","message":"Please, provide correct credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:46:45.777Z","level":"error","message":"Please, provide correct credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:46:57.246Z","level":"error","message":"Please, provide correct credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:47:02.682Z","level":"error","message":"Please provide email and password","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:47:03.328Z","level":"error","message":"Please provide email and password","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:47:03.889Z","level":"error","message":"Please provide email and password","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:47:04.119Z","level":"error","message":"Please provide email and password","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:47:04.264Z","level":"error","message":"Please provide email and password","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:47:04.456Z","level":"error","message":"Please provide email and password","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:47:04.603Z","level":"error","message":"Please provide email and password","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:47:07.260Z","level":"error","message":"Please provide email and password","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:47:07.787Z","level":"error","message":"Please provide email and password","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:47:07.975Z","level":"error","message":"Please provide email and password","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:47:08.167Z","level":"error","message":"Please provide email and password","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:47:10.331Z","level":"error","message":"Please provide email and password","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:47:17.846Z","level":"error","message":"Please, provide correct credentials","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:47:24.697Z","level":"error","message":"Please provide email and password","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T09:51:21.005Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:52:13.940Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:56:10.283Z","level":"error","message":"Please upload an image file","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T09:59:19.149Z","level":"error","message":"ENOENT: no such file or directory, open 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\userImages\\16921799591365172658.jpg'","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T10:18:44.373Z","level":"error","message":"Email not verified","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T10:19:31.566Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
{"date":"2023-08-16T10:20:57.902Z","level":"error","message":"ENOENT: no such file or directory, unlink 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\avatar\\true'","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:21:00.282Z","level":"error","message":"ENOENT: no such file or directory, unlink 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\avatar\\true'","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:21:54.078Z","level":"error","message":"ENOENT: no such file or directory, unlink 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\avatar\\true'","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:21:55.164Z","level":"error","message":"ENOENT: no such file or directory, unlink 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\avatar\\true'","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:23:17.538Z","level":"error","message":"ENOENT: no such file or directory, unlink 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\avatar\\true'","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:23:23.014Z","level":"error","message":"ENOENT: no such file or directory, unlink 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\avatar\\true'","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:24:21.776Z","level":"error","message":"ENOENT: no such file or directory, unlink 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\avatar\\true'","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:24:22.871Z","level":"error","message":"ENOENT: no such file or directory, unlink 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\avatar\\true'","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:28:29.956Z","level":"error","message":"ENOENT: no such file or directory, unlink 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\avatar\\true'","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:28:31.112Z","level":"error","message":"ENOENT: no such file or directory, unlink 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\avatar\\true'","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:30:18.842Z","level":"error","message":"Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: rev-backend.users index: email_1 dup key: { email: \"umerm123@mail.com\" }","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:30:20.359Z","level":"error","message":"Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: rev-backend.users index: email_1 dup key: { email: \"umerm123@mail.com\" }","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:30:55.735Z","level":"error","message":"Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: rev-backend.users index: email_1 dup key: { email: \"umerm123@mail.com\" }","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:30:58.839Z","level":"error","message":"Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: rev-backend.users index: email_1 dup key: { email: \"umerm123@mail.com\" }","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:31:30.013Z","level":"error","message":"Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: rev-backend.users index: email_1 dup key: { email: \"umerm123@mail.com\" }","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:34:56.430Z","level":"error","message":"ENOENT: no such file or directory, unlink 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\avatar\\true'","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:34:58.163Z","level":"error","message":"ENOENT: no such file or directory, unlink 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\avatar\\true'","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:35:55.152Z","level":"error","message":"ENOENT: no such file or directory, unlink 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\avatar\\true'","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:39:47.161Z","level":"error","message":"ENOENT: no such file or directory, unlink 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\avatar\\true'","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:39:48.493Z","level":"error","message":"ENOENT: no such file or directory, unlink 'D:\\DotClick Work\\Revolutionary System\\revolutionary-system\\uploads\\avatar\\true'","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:41:39.056Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:42:51.339Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:44:27.834Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:44:59.248Z","level":"error","message":"Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: rev-backend.users index: email_1 dup key: { email: \"umerm123@mail.com\" }","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:47:10.365Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:47:37.148Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:48:03.273Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:50:30.613Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:50:49.178Z","level":"error","message":"Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: rev-backend.users index: email_1 dup key: { email: \"umerm123@mail.com\" }","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T10:52:49.417Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T11:18:57.067Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T11:19:33.011Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T11:19:38.307Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T11:20:11.359Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T11:22:32.837Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T11:23:03.555Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T11:24:53.304Z","level":"error","message":"Cannot destructure property 'avatar' of 'req.files' as it is null.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:24:54.257Z","level":"error","message":"Cannot destructure property 'avatar' of 'req.files' as it is null.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:24:54.964Z","level":"error","message":"Cannot destructure property 'avatar' of 'req.files' as it is null.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:24:55.150Z","level":"error","message":"Cannot destructure property 'avatar' of 'req.files' as it is null.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:24:55.346Z","level":"error","message":"Cannot destructure property 'avatar' of 'req.files' as it is null.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:30:31.096Z","level":"error","message":"Cannot destructure property 'avatar' of 'req.files' as it is null.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:32:28.416Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:32:30.345Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:35:19.003Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:35:20.663Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:35:21.270Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:35:21.470Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:35:21.639Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:36:02.241Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:36:03.247Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:36:07.972Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:36:08.856Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:38:04.397Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:38:05.168Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:39:32.748Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:39:34.854Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:39:35.697Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:40:00.331Z","level":"error","message":"Cannot read properties of undefined (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:40:01.257Z","level":"error","message":"Cannot read properties of undefined (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:40:02.669Z","level":"error","message":"Cannot read properties of undefined (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:41:34.708Z","level":"error","message":"Cannot destructure property 'avatar' of 'req.files' as it is null.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:41:36.413Z","level":"error","message":"Cannot destructure property 'avatar' of 'req.files' as it is null.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:42:14.229Z","level":"error","message":"avatar is not defined","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:42:15.656Z","level":"error","message":"avatar is not defined","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:42:16.619Z","level":"error","message":"avatar is not defined","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:44:45.676Z","level":"error","message":"Cannot destructure property 'avatar' of 'req.files' as it is null.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:44:46.853Z","level":"error","message":"Cannot destructure property 'avatar' of 'req.files' as it is null.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:46:32.030Z","level":"error","message":"Cannot destructure property 'avatar' of 'req.files' as it is null.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:48:03.923Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:48:05.280Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:48:06.207Z","level":"error","message":"Cannot read properties of null (reading 'avatar')","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:48:28.166Z","level":"error","message":"Cannot destructure property 'avatar' of 'req.files' as it is null.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:48:28.897Z","level":"error","message":"Cannot destructure property 'avatar' of 'req.files' as it is null.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:48:47.776Z","level":"error","message":"Cannot destructure property 'avatar' of 'req.files' as it is null.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:51:45.972Z","level":"error","message":"Cannot destructure property 'avatar' of 'req.files' as it is null.","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:53:45.459Z","level":"error","message":"avatar is not defined","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T11:57:53.474Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
{"date":"2023-08-16T12:02:32.663Z","level":"error","message":"avatarFileName is not defined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:05:13.959Z","level":"error","message":"avatarFileName is not defined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:05:16.288Z","level":"error","message":"avatarFileName is not defined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:06:26.617Z","level":"error","message":"avatarFileName is not defined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:08:18.023Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:31:38.194Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:34:05.355Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:37:17.317Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:38:27.259Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:39:18.392Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:40:10.048Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:41:01.600Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:41:44.637Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:42:08.859Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:45:21.314Z","level":"error","message":"Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: rev-backend.users index: email_1 dup key: { email: \"umerm123@mail.com\" }","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:46:13.511Z","level":"error","message":"Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: rev-backend.users index: email_1 dup key: { email: \"umerm123@mail.com\" }","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:46:59.950Z","level":"error","message":"Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: rev-backend.users index: email_1 dup key: { email: \"umerm123@mail.com\" }","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:48:06.348Z","level":"error","message":"Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: rev-backend.users index: email_1 dup key: { email: \"umerm123@mail.com\" }","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:49:27.568Z","level":"error","message":"Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: rev-backend.users index: email_1 dup key: { email: \"umerm123@mail.com\" }","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T12:57:02.170Z","level":"error","message":"Plan executor error during findAndModify :: caused by :: E11000 duplicate key error collection: rev-backend.users index: email_1 dup key: { email: \"umerm123@mail.com\" }","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T13:03:53.052Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T13:07:47.679Z","level":"error","message":"resetPasswordToken is not defined","method":"POST","service":"user-service","url":"/forgotPassword"}
{"date":"2023-08-16T13:08:28.104Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/forgotPassword"}
{"date":"2023-08-16T13:12:25.102Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T13:16:04.782Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T13:20:47.698Z","level":"error","message":"The \"cb\" argument must be of type function. Received undefined","method":"PUT","service":"user-service","url":"/update-personal-info"}
{"date":"2023-08-16T14:05:03.724Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
<<<<<<< HEAD
{"date":"2023-08-16T17:33:18.237Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T17:34:05.419Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T17:34:12.337Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
{"date":"2023-08-16T17:34:26.760Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
{"date":"2023-08-16T17:41:32.093Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T17:41:43.445Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T17:43:41.967Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/forgotPassword"}
{"date":"2023-08-16T17:45:22.651Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/forgotPassword"}
{"date":"2023-08-16T17:51:47.062Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/forgotPassword"}
{"date":"2023-08-16T17:52:43.676Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/forgotPassword"}
{"date":"2023-08-16T17:52:50.632Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/forgotPassword"}
{"date":"2023-08-16T17:53:15.097Z","level":"error","message":"Invalid token","method":"PUT","service":"user-service","url":"/resetPassword"}
{"date":"2023-08-16T17:58:01.694Z","level":"error","message":"Password must contain atleast one uppercase letter, one special character and one number","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T17:58:11.437Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
{"date":"2023-08-16T18:04:54.059Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T18:05:17.663Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T18:20:58.101Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T18:24:56.851Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/forgotPassword"}
{"date":"2023-08-16T18:41:19.454Z","level":"error","message":"Password must contain atleast one uppercase letter, one special character and one number","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T18:41:24.213Z","level":"error","message":"Password must contain atleast one uppercase letter, one special character and one number","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T18:41:37.704Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
{"date":"2023-08-16T18:41:42.404Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T18:43:40.311Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T18:44:01.306Z","level":"error","message":"User already exists","method":"POST","service":"user-service","url":"/register"}
{"date":"2023-08-16T18:45:06.319Z","level":"error","message":"Email not verified","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T18:46:25.591Z","level":"error","message":"Email not verified","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T18:47:30.395Z","level":"error","message":"Email not verified","method":"POST","service":"user-service","url":"/login"}
{"date":"2023-08-16T18:47:31.909Z","level":"error","message":"The provided authorization grant is invalid, expired, or revoked","method":"POST","service":"user-service","url":"/requestEmailToken"}
=======
{"date":"2023-08-17T12:00:36.396Z","level":"error","message":"createBooking is not defined","method":"POST","service":"user-service","url":"/new/64dba16b81e4fb7981e03706"}
{"date":"2023-08-17T12:01:52.117Z","level":"error","message":"createBooking is not defined","method":"POST","service":"user-service","url":"/new/64dba16b81e4fb7981e03706"}
{"date":"2023-08-17T12:03:02.165Z","level":"error","message":"BookingAccomodation validation failed: bookingDate.0.startDate: Cast to date failed for value \"20-5-2023\" (type string) at path \"startDate\", bookingDate.0.endDate: Cast to date failed for value \"20-5-2023\" (type string) at path \"endDate\"","method":"POST","service":"user-service","url":"/new/64dba16b81e4fb7981e03706"}
{"date":"2023-08-17T12:05:17.937Z","level":"error","message":"BookingAccomodation validation failed: bookingDate.0.startDate: Cast to date failed for value \"20-5-2023\" (type string) at path \"startDate\", bookingDate.0.endDate: Cast to date failed for value \"20-5-2023\" (type string) at path \"endDate\"","method":"POST","service":"user-service","url":"/new/64dba16b81e4fb7981e03706"}
{"date":"2023-08-17T12:31:10.257Z","level":"error","message":"No Such Booking exist","method":"GET","service":"user-service","url":"/userBookings"}
{"date":"2023-08-17T12:31:11.691Z","level":"error","message":"No Such Booking exist","method":"GET","service":"user-service","url":"/userBookings"}
{"date":"2023-08-17T12:33:04.148Z","level":"error","message":"No Such Booking exist","method":"GET","service":"user-service","url":"/userBookings"}
{"date":"2023-08-17T12:36:36.888Z","level":"error","message":"totalAmount is not defined","method":"POST","service":"user-service","url":"/new/64dba16b81e4fb7981e03706"}
{"date":"2023-08-17T12:38:10.785Z","level":"error","message":"totalAmount is not defined","method":"POST","service":"user-service","url":"/new/64dba16b81e4fb7981e03706"}
{"date":"2023-08-17T13:00:26.887Z","level":"error","message":"Cannot read properties of undefined (reading 'includes')","method":"POST","service":"user-service","url":"/new/64dba16b81e4fb7981e03706"}
{"date":"2023-08-17T13:02:48.529Z","level":"error","message":"Already Booked","method":"POST","service":"user-service","url":"/new/64dba16b81e4fb7981e03706"}
{"date":"2023-08-17T13:03:11.721Z","level":"error","message":"Already Booked","method":"POST","service":"user-service","url":"/new/64dba16b81e4fb7981e03706"}
{"date":"2023-08-17T13:04:01.847Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationsId: '64dba16b81e4fb7981e03706' }\" (type Object) at path \"_id\" for model \"BookingAccomodation\"","method":"POST","service":"user-service","url":"/new/64dba16b81e4fb7981e03706"}
{"date":"2023-08-17T13:04:03.284Z","level":"error","message":"Cast to ObjectId failed for value \"{ accomodationsId: '64dba16b81e4fb7981e03706' }\" (type Object) at path \"_id\" for model \"BookingAccomodation\"","method":"POST","service":"user-service","url":"/new/64dba16b81e4fb7981e03706"}
{"date":"2023-08-17T13:04:36.880Z","level":"error","message":"Already Booked","method":"POST","service":"user-service","url":"/new/64dba16b81e4fb7981e03706"}
{"date":"2023-08-17T13:04:38.718Z","level":"error","message":"Already Booked","method":"POST","service":"user-service","url":"/new/64dba16b81e4fb7981e03706"}
{"date":"2023-08-17T13:04:39.998Z","level":"error","message":"Already Booked","method":"POST","service":"user-service","url":"/new/64dba16b81e4fb7981e03706"}
{"date":"2023-08-17T13:04:56.032Z","level":"error","message":"Already Booked","method":"POST","service":"user-service","url":"/new/64dba16b81e4fb7981e03706"}
{"date":"2023-08-17T13:04:57.867Z","level":"error","message":"Already Booked","method":"POST","service":"user-service","url":"/new/64dba16b81e4fb7981e03706"}
{"date":"2023-08-17T13:05:22.222Z","level":"error","message":"No Such Booking exist","method":"GET","service":"user-service","url":"/userBookings"}
{"date":"2023-08-17T13:05:23.386Z","level":"error","message":"No Such Booking exist","method":"GET","service":"user-service","url":"/userBookings"}
{"date":"2023-08-17T13:05:45.914Z","level":"error","message":"No Such Booking exist","method":"GET","service":"user-service","url":"/userBookings"}
{"date":"2023-08-17T13:05:47.252Z","level":"error","message":"No Such Booking exist","method":"GET","service":"user-service","url":"/userBookings"}
{"date":"2023-08-17T13:06:58.074Z","level":"error","message":"No Such Booking exist","method":"GET","service":"user-service","url":"/userBookings"}
{"date":"2023-08-17T13:20:10.127Z","level":"error","message":"Cast to ObjectId failed for value \"{ user: new ObjectId(\"64dcd76e0edab204ad32180d\") }\" (type Object) at path \"_id\" for model \"BookingAccomodation\"","method":"GET","service":"user-service","url":"/userBookings"}
{"date":"2023-08-17T13:20:11.252Z","level":"error","message":"Cast to ObjectId failed for value \"{ user: new ObjectId(\"64dcd76e0edab204ad32180d\") }\" (type Object) at path \"_id\" for model \"BookingAccomodation\"","method":"GET","service":"user-service","url":"/userBookings"}
{"date":"2023-08-17T13:49:05.616Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T13:50:49.759Z","level":"error","message":"Accomodation validation failed: rent: Path `rent` is required.","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T14:40:25.572Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T14:44:35.456Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T14:46:00.300Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T14:46:31.381Z","level":"error","message":"Cannot read properties of undefined (reading 'mimetype')","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T14:47:51.290Z","level":"error","message":"Cannot read properties of undefined (reading 'mimetype')","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T14:48:08.820Z","level":"error","message":"Cannot read properties of undefined (reading 'mimetype')","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T14:49:04.548Z","level":"error","message":"Cannot read properties of undefined (reading 'mimetype')","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T15:02:14.816Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T15:04:40.093Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T15:08:40.299Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T15:26:53.276Z","level":"error","message":"Accomodation validation failed: backgoundImages.0: Cast to [string] failed for value \"[ [] ]\" (type string) at path \"backgoundImages.0\" because of \"CastError\"","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T15:37:45.307Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T15:37:48.267Z","level":"error","message":"Cannot read properties of undefined (reading 'length')","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T15:39:34.249Z","level":"error","message":"backgroundImages is not iterable","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T15:40:28.337Z","level":"error","message":"backgroundImages is not iterable","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T15:59:59.697Z","level":"error","message":"Accomodation already exist","method":"POST","service":"user-service","url":"/newAccomodation"}
{"date":"2023-08-17T16:00:25.954Z","level":"error","message":"backgroundImages is not iterable","method":"POST","service":"user-service","url":"/newAccomodation"}
>>>>>>> umer/rs
